Terminals unused in grammar

   FOR
   CONST
   OP_EXP


Grammar

    0 $accept: program $end

    1 program: program_name imports classes main

    2 program_name: PROGRAM COND_COLN IDENTIFIER

    3 imports: imports import
    4        | /* empty */

    5 import: IMPORT import_element SEMC

    6 import_element: import_element OP_PROP IDENTIFIER
    7               | IDENTIFIER

    8 classes: classes class
    9        | /* empty */

   10 main: MAIN LPAR RPAR LCUR instr_set RCUR

   11 class: CLASS IDENTIFIER LCUR class_instance_properties class_constructors class_instance_methods RCUR
   12      | CLASS IDENTIFIER LCUR class_instance_properties class_instance_methods RCUR

   13 class_instance_properties: class_instance_properties class_instance_property
   14                          | /* empty */

   15 class_instance_property: type IDENTIFIER SEMC
   16                        | type IDENTIFIER OP_ASSIGN expr SEMC

   17 class_constructors: class_constructors class_constructor
   18                   | class_constructor

   19 class_constructor: IDENTIFIER LPAR parameters_def RPAR LCUR instr_set RCUR

   20 class_instance_methods: class_instance_methods class_instance_method
   21                       | /* empty */

   22 class_instance_method: METHOD type IDENTIFIER LPAR parameters_def RPAR LCUR instr_set RCUR

   23 instr_set: instr_set instr
   24          | /* empty */

   25 instr: SEMC
   26      | instr_simple SEMC
   27      | instr_conditional
   28      | instr_loop

   29 instr_simple: instr_declaration
   30             | instr_return
   31             | expr

   32 instr_conditional: block_if

   33 instr_loop: block_while

   34 instr_declaration: type IDENTIFIER
   35                  | type IDENTIFIER OP_ASSIGN expr

   36 instr_return: RETURN expr

   37 block_if: IF LPAR expr_boolean RPAR LCUR instr_set RCUR block_else

   38 block_else: ELSE LCUR instr_set RCUR
   39           | ELSE block_if
   40           | /* empty */

   41 block_while: WHILE LPAR expr_boolean RPAR LCUR instr_set RCUR
   42            | WHILE LPAR expr_boolean RPAR instr

   43 expr: expr_assignment

   44 expr_assignment: expr_conditional
   45                | expr_conditional OP_ASSIGN expr_assignment
   46                | expr_conditional OP_PLUS_SH expr_assignment
   47                | expr_conditional OP_MINUS_SH expr_assignment
   48                | expr_conditional OP_MULT_SH expr_assignment
   49                | expr_conditional OP_DIV_SH expr_assignment
   50                | expr_conditional OP_MOD_SH expr_assignment

   51 expr_conditional: expr_boolean
   52                 | expr_boolean COND_QUES expr_conditional COND_COLN expr_conditional

   53 expr_boolean: expr_implies

   54 expr_implies: expr_or
   55             | expr_implies OP_IMPLIES expr_or

   56 expr_or: expr_and
   57        | expr_or OP_OR expr_and

   58 expr_and: expr_equality
   59         | expr_and OP_AND expr_equality

   60 expr_equality: expr_order
   61              | expr_equality OP_EQ expr_order
   62              | expr_equality OP_NE expr_order

   63 expr_order: expr_additive
   64           | expr_order OP_GE expr_additive
   65           | expr_order OP_LE expr_additive
   66           | expr_order OP_GT expr_additive
   67           | expr_order OP_LT expr_additive

   68 expr_additive: expr_multiplicative
   69              | expr_additive OP_PLUS expr_multiplicative
   70              | expr_additive OP_MINUS expr_multiplicative

   71 expr_multiplicative: expr_object_creation
   72                    | expr_multiplicative OP_MULTIPLICATION expr_object_creation
   73                    | expr_multiplicative OP_DIVITION expr_object_creation
   74                    | expr_multiplicative OP_MODULO expr_object_creation

   75 expr_object_creation: expr_pre_additive_sign_and_not
   76                     | NEW IDENTIFIER LPAR parameters RPAR
   77                     | NEW IDENTIFIER array_size

   78 array_size: LBRA expr RBRA
   79           | array_size LBRA expr RBRA

   80 expr_pre_additive_sign_and_not: expr_post_additive_or_access
   81                               | OP_PLUS_PLUS expr_post_additive_or_access
   82                               | OP_MINUS_MINUS expr_post_additive_or_access
   83                               | OP_PLUS expr_post_additive_or_access
   84                               | OP_MINUS expr_post_additive_or_access
   85                               | OP_NOT expr_post_additive_or_access

   86 expr_post_additive_or_access: expr_basic
   87                             | expr_basic OP_PLUS_PLUS
   88                             | expr_basic OP_MINUS_MINUS
   89                             | expr_post_additive_or_access method_call
   90                             | expr_post_additive_or_access property_access

   91 property_access: OP_PROP IDENTIFIER

   92 method_call: OP_PROP IDENTIFIER LPAR parameters RPAR

   93 expr_basic: built_in
   94           | IDENTIFIER
   95           | LPAR expr RPAR
   96           | IDENTIFIER array_size

   97 built_in: INT
   98         | BOOLEAN
   99         | CHAR
  100         | STRING

  101 parameters_def: /* empty */
  102               | parameters_def_2

  103 parameters_def_2: parameter_def
  104                 | parameters_def_2 COMA parameter_def

  105 parameter_def: type IDENTIFIER

  106 parameters: /* empty */
  107           | parameter
  108           | parameters COMA parameter

  109 parameter: expr

  110 type: IDENTIFIER
  111     | IDENTIFIER brackets

  112 brackets: LBRA RBRA
  113         | brackets LBRA RBRA


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 97
BOOLEAN (259) 98
CHAR (260) 99
STRING (261) 100
IDENTIFIER (262) 2 6 7 11 12 15 16 19 22 34 35 76 77 91 92 94 96 105
    110 111
IF (263) 37
ELSE (264) 38 39
FOR (265)
WHILE (266) 41 42
CONST (267)
NEW (268) 76 77
IMPORT (269) 5
CLASS (270) 11 12
METHOD (271) 22
PROGRAM (272) 2
RETURN (273) 36
MAIN (274) 10
OP_PLUS (275) 69 83
OP_MINUS (276) 70 84
OP_MULTIPLICATION (277) 72
OP_DIVITION (278) 73
OP_EXP (279)
OP_MODULO (280) 74
OP_PLUS_PLUS (281) 81 87
OP_MINUS_MINUS (282) 82 88
OP_EQ (283) 61
OP_NE (284) 62
OP_GE (285) 64
OP_LE (286) 65
OP_GT (287) 66
OP_LT (288) 67
OP_AND (289) 59
OP_OR (290) 57
OP_NOT (291) 85
OP_IMPLIES (292) 55
OP_ASSIGN (293) 16 35 45
OP_PLUS_SH (294) 46
OP_MINUS_SH (295) 47
OP_MULT_SH (296) 48
OP_DIV_SH (297) 49
OP_MOD_SH (298) 50
OP_PROP (299) 6 91 92
LPAR (300) 10 19 22 37 41 42 76 92 95
RPAR (301) 10 19 22 37 41 42 76 92 95
LBRA (302) 78 79 112 113
RBRA (303) 78 79 112 113
LCUR (304) 10 11 12 19 22 37 38 41
RCUR (305) 10 11 12 19 22 37 38 41
SEMC (306) 5 15 16 25 26
COMA (307) 104 108
COND_QUES (308) 52
COND_COLN (309) 2 52


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
program_name (57)
    on left: 2, on right: 1
imports (58)
    on left: 3 4, on right: 1 3
import (59)
    on left: 5, on right: 3
import_element (60)
    on left: 6 7, on right: 5 6
classes (61)
    on left: 8 9, on right: 1 8
main (62)
    on left: 10, on right: 1
class (63)
    on left: 11 12, on right: 8
class_instance_properties (64)
    on left: 13 14, on right: 11 12 13
class_instance_property (65)
    on left: 15 16, on right: 13
class_constructors (66)
    on left: 17 18, on right: 11 17
class_constructor (67)
    on left: 19, on right: 17 18
class_instance_methods (68)
    on left: 20 21, on right: 11 12 20
class_instance_method (69)
    on left: 22, on right: 20
instr_set (70)
    on left: 23 24, on right: 10 19 22 23 37 38 41
instr (71)
    on left: 25 26 27 28, on right: 23 42
instr_simple (72)
    on left: 29 30 31, on right: 26
instr_conditional (73)
    on left: 32, on right: 27
instr_loop (74)
    on left: 33, on right: 28
instr_declaration (75)
    on left: 34 35, on right: 29
instr_return (76)
    on left: 36, on right: 30
block_if (77)
    on left: 37, on right: 32 39
block_else (78)
    on left: 38 39 40, on right: 37
block_while (79)
    on left: 41 42, on right: 33
expr (80)
    on left: 43, on right: 16 31 35 36 78 79 95 109
expr_assignment (81)
    on left: 44 45 46 47 48 49 50, on right: 43 45 46 47 48 49 50
expr_conditional (82)
    on left: 51 52, on right: 44 45 46 47 48 49 50 52
expr_boolean (83)
    on left: 53, on right: 37 41 42 51 52
expr_implies (84)
    on left: 54 55, on right: 53 55
expr_or (85)
    on left: 56 57, on right: 54 55 57
expr_and (86)
    on left: 58 59, on right: 56 57 59
expr_equality (87)
    on left: 60 61 62, on right: 58 59 61 62
expr_order (88)
    on left: 63 64 65 66 67, on right: 60 61 62 64 65 66 67
expr_additive (89)
    on left: 68 69 70, on right: 63 64 65 66 67 69 70
expr_multiplicative (90)
    on left: 71 72 73 74, on right: 68 69 70 72 73 74
expr_object_creation (91)
    on left: 75 76 77, on right: 71 72 73 74
array_size (92)
    on left: 78 79, on right: 77 79 96
expr_pre_additive_sign_and_not (93)
    on left: 80 81 82 83 84 85, on right: 75
expr_post_additive_or_access (94)
    on left: 86 87 88 89 90, on right: 80 81 82 83 84 85 89 90
property_access (95)
    on left: 91, on right: 90
method_call (96)
    on left: 92, on right: 89
expr_basic (97)
    on left: 93 94 95 96, on right: 86 87 88
built_in (98)
    on left: 97 98 99 100, on right: 93
parameters_def (99)
    on left: 101 102, on right: 19 22
parameters_def_2 (100)
    on left: 103 104, on right: 102 104
parameter_def (101)
    on left: 105, on right: 103 104
parameters (102)
    on left: 106 107 108, on right: 76 92 108
parameter (103)
    on left: 109, on right: 107 108
type (104)
    on left: 110 111, on right: 15 16 22 34 35 105
brackets (105)
    on left: 112 113, on right: 111 113


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program       go to state 2
    program_name  go to state 3


state 1

    2 program_name: PROGRAM . COND_COLN IDENTIFIER

    COND_COLN  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: program_name . imports classes main

    $default  reduce using rule 4 (imports)

    imports  go to state 6


state 4

    2 program_name: PROGRAM COND_COLN . IDENTIFIER

    IDENTIFIER  shift, and go to state 7


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: program_name imports . classes main
    3 imports: imports . import

    IMPORT  shift, and go to state 8

    $default  reduce using rule 9 (classes)

    import   go to state 9
    classes  go to state 10


state 7

    2 program_name: PROGRAM COND_COLN IDENTIFIER .

    $default  reduce using rule 2 (program_name)


state 8

    5 import: IMPORT . import_element SEMC

    IDENTIFIER  shift, and go to state 11

    import_element  go to state 12


state 9

    3 imports: imports import .

    $default  reduce using rule 3 (imports)


state 10

    1 program: program_name imports classes . main
    8 classes: classes . class

    CLASS  shift, and go to state 13
    MAIN   shift, and go to state 14

    main   go to state 15
    class  go to state 16


state 11

    7 import_element: IDENTIFIER .

    $default  reduce using rule 7 (import_element)


state 12

    5 import: IMPORT import_element . SEMC
    6 import_element: import_element . OP_PROP IDENTIFIER

    OP_PROP  shift, and go to state 17
    SEMC     shift, and go to state 18


state 13

   11 class: CLASS . IDENTIFIER LCUR class_instance_properties class_constructors class_instance_methods RCUR
   12      | CLASS . IDENTIFIER LCUR class_instance_properties class_instance_methods RCUR

    IDENTIFIER  shift, and go to state 19


state 14

   10 main: MAIN . LPAR RPAR LCUR instr_set RCUR

    LPAR  shift, and go to state 20


state 15

    1 program: program_name imports classes main .

    $default  reduce using rule 1 (program)


state 16

    8 classes: classes class .

    $default  reduce using rule 8 (classes)


state 17

    6 import_element: import_element OP_PROP . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


state 18

    5 import: IMPORT import_element SEMC .

    $default  reduce using rule 5 (import)


state 19

   11 class: CLASS IDENTIFIER . LCUR class_instance_properties class_constructors class_instance_methods RCUR
   12      | CLASS IDENTIFIER . LCUR class_instance_properties class_instance_methods RCUR

    LCUR  shift, and go to state 22


state 20

   10 main: MAIN LPAR . RPAR LCUR instr_set RCUR

    RPAR  shift, and go to state 23


state 21

    6 import_element: import_element OP_PROP IDENTIFIER .

    $default  reduce using rule 6 (import_element)


state 22

   11 class: CLASS IDENTIFIER LCUR . class_instance_properties class_constructors class_instance_methods RCUR
   12      | CLASS IDENTIFIER LCUR . class_instance_properties class_instance_methods RCUR

    $default  reduce using rule 14 (class_instance_properties)

    class_instance_properties  go to state 24


state 23

   10 main: MAIN LPAR RPAR . LCUR instr_set RCUR

    LCUR  shift, and go to state 25


state 24

   11 class: CLASS IDENTIFIER LCUR class_instance_properties . class_constructors class_instance_methods RCUR
   12      | CLASS IDENTIFIER LCUR class_instance_properties . class_instance_methods RCUR
   13 class_instance_properties: class_instance_properties . class_instance_property

    IDENTIFIER  shift, and go to state 26

    $default  reduce using rule 21 (class_instance_methods)

    class_instance_property  go to state 27
    class_constructors       go to state 28
    class_constructor        go to state 29
    class_instance_methods   go to state 30
    type                     go to state 31


state 25

   10 main: MAIN LPAR RPAR LCUR . instr_set RCUR

    $default  reduce using rule 24 (instr_set)

    instr_set  go to state 32


state 26

   19 class_constructor: IDENTIFIER . LPAR parameters_def RPAR LCUR instr_set RCUR
  110 type: IDENTIFIER .
  111     | IDENTIFIER . brackets

    LPAR  shift, and go to state 33
    LBRA  shift, and go to state 34

    $default  reduce using rule 110 (type)

    brackets  go to state 35


state 27

   13 class_instance_properties: class_instance_properties class_instance_property .

    $default  reduce using rule 13 (class_instance_properties)


state 28

   11 class: CLASS IDENTIFIER LCUR class_instance_properties class_constructors . class_instance_methods RCUR
   17 class_constructors: class_constructors . class_constructor

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 21 (class_instance_methods)

    class_constructor       go to state 37
    class_instance_methods  go to state 38


state 29

   18 class_constructors: class_constructor .

    $default  reduce using rule 18 (class_constructors)


state 30

   12 class: CLASS IDENTIFIER LCUR class_instance_properties class_instance_methods . RCUR
   20 class_instance_methods: class_instance_methods . class_instance_method

    METHOD  shift, and go to state 39
    RCUR    shift, and go to state 40

    class_instance_method  go to state 41


state 31

   15 class_instance_property: type . IDENTIFIER SEMC
   16                        | type . IDENTIFIER OP_ASSIGN expr SEMC

    IDENTIFIER  shift, and go to state 42


state 32

   10 main: MAIN LPAR RPAR LCUR instr_set . RCUR
   23 instr_set: instr_set . instr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RCUR            shift, and go to state 58
    SEMC            shift, and go to state 59

    instr                           go to state 60
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 33

   19 class_constructor: IDENTIFIER LPAR . parameters_def RPAR LCUR instr_set RCUR

    IDENTIFIER  shift, and go to state 85

    $default  reduce using rule 101 (parameters_def)

    parameters_def    go to state 86
    parameters_def_2  go to state 87
    parameter_def     go to state 88
    type              go to state 89


state 34

  112 brackets: LBRA . RBRA

    RBRA  shift, and go to state 90


state 35

  111 type: IDENTIFIER brackets .
  113 brackets: brackets . LBRA RBRA

    LBRA  shift, and go to state 91

    $default  reduce using rule 111 (type)


state 36

   19 class_constructor: IDENTIFIER . LPAR parameters_def RPAR LCUR instr_set RCUR

    LPAR  shift, and go to state 33


state 37

   17 class_constructors: class_constructors class_constructor .

    $default  reduce using rule 17 (class_constructors)


state 38

   11 class: CLASS IDENTIFIER LCUR class_instance_properties class_constructors class_instance_methods . RCUR
   20 class_instance_methods: class_instance_methods . class_instance_method

    METHOD  shift, and go to state 39
    RCUR    shift, and go to state 92

    class_instance_method  go to state 41


state 39

   22 class_instance_method: METHOD . type IDENTIFIER LPAR parameters_def RPAR LCUR instr_set RCUR

    IDENTIFIER  shift, and go to state 85

    type  go to state 93


state 40

   12 class: CLASS IDENTIFIER LCUR class_instance_properties class_instance_methods RCUR .

    $default  reduce using rule 12 (class)


state 41

   20 class_instance_methods: class_instance_methods class_instance_method .

    $default  reduce using rule 20 (class_instance_methods)


state 42

   15 class_instance_property: type IDENTIFIER . SEMC
   16                        | type IDENTIFIER . OP_ASSIGN expr SEMC

    OP_ASSIGN  shift, and go to state 94
    SEMC       shift, and go to state 95


state 43

   97 built_in: INT .

    $default  reduce using rule 97 (built_in)


state 44

   98 built_in: BOOLEAN .

    $default  reduce using rule 98 (built_in)


state 45

   99 built_in: CHAR .

    $default  reduce using rule 99 (built_in)


state 46

  100 built_in: STRING .

    $default  reduce using rule 100 (built_in)


state 47

   94 expr_basic: IDENTIFIER .
   96           | IDENTIFIER . array_size
  110 type: IDENTIFIER .
  111     | IDENTIFIER . brackets

    LBRA  shift, and go to state 96

    IDENTIFIER  reduce using rule 110 (type)
    $default    reduce using rule 94 (expr_basic)

    array_size  go to state 97
    brackets    go to state 35


state 48

   37 block_if: IF . LPAR expr_boolean RPAR LCUR instr_set RCUR block_else

    LPAR  shift, and go to state 98


state 49

   41 block_while: WHILE . LPAR expr_boolean RPAR LCUR instr_set RCUR
   42            | WHILE . LPAR expr_boolean RPAR instr

    LPAR  shift, and go to state 99


state 50

   76 expr_object_creation: NEW . IDENTIFIER LPAR parameters RPAR
   77                     | NEW . IDENTIFIER array_size

    IDENTIFIER  shift, and go to state 100


state 51

   36 instr_return: RETURN . expr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 102
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 52

   83 expr_pre_additive_sign_and_not: OP_PLUS . expr_post_additive_or_access

    INT         shift, and go to state 43
    BOOLEAN     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    IDENTIFIER  shift, and go to state 101
    LPAR        shift, and go to state 57

    expr_post_additive_or_access  go to state 103
    expr_basic                    go to state 82
    built_in                      go to state 83


state 53

   84 expr_pre_additive_sign_and_not: OP_MINUS . expr_post_additive_or_access

    INT         shift, and go to state 43
    BOOLEAN     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    IDENTIFIER  shift, and go to state 101
    LPAR        shift, and go to state 57

    expr_post_additive_or_access  go to state 104
    expr_basic                    go to state 82
    built_in                      go to state 83


state 54

   81 expr_pre_additive_sign_and_not: OP_PLUS_PLUS . expr_post_additive_or_access

    INT         shift, and go to state 43
    BOOLEAN     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    IDENTIFIER  shift, and go to state 101
    LPAR        shift, and go to state 57

    expr_post_additive_or_access  go to state 105
    expr_basic                    go to state 82
    built_in                      go to state 83


state 55

   82 expr_pre_additive_sign_and_not: OP_MINUS_MINUS . expr_post_additive_or_access

    INT         shift, and go to state 43
    BOOLEAN     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    IDENTIFIER  shift, and go to state 101
    LPAR        shift, and go to state 57

    expr_post_additive_or_access  go to state 106
    expr_basic                    go to state 82
    built_in                      go to state 83


state 56

   85 expr_pre_additive_sign_and_not: OP_NOT . expr_post_additive_or_access

    INT         shift, and go to state 43
    BOOLEAN     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    IDENTIFIER  shift, and go to state 101
    LPAR        shift, and go to state 57

    expr_post_additive_or_access  go to state 107
    expr_basic                    go to state 82
    built_in                      go to state 83


state 57

   95 expr_basic: LPAR . expr RPAR

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 108
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 58

   10 main: MAIN LPAR RPAR LCUR instr_set RCUR .

    $default  reduce using rule 10 (main)


state 59

   25 instr: SEMC .

    $default  reduce using rule 25 (instr)


state 60

   23 instr_set: instr_set instr .

    $default  reduce using rule 23 (instr_set)


state 61

   26 instr: instr_simple . SEMC

    SEMC  shift, and go to state 109


state 62

   27 instr: instr_conditional .

    $default  reduce using rule 27 (instr)


state 63

   28 instr: instr_loop .

    $default  reduce using rule 28 (instr)


state 64

   29 instr_simple: instr_declaration .

    $default  reduce using rule 29 (instr_simple)


state 65

   30 instr_simple: instr_return .

    $default  reduce using rule 30 (instr_simple)


state 66

   32 instr_conditional: block_if .

    $default  reduce using rule 32 (instr_conditional)


state 67

   33 instr_loop: block_while .

    $default  reduce using rule 33 (instr_loop)


state 68

   31 instr_simple: expr .

    $default  reduce using rule 31 (instr_simple)


state 69

   43 expr: expr_assignment .

    $default  reduce using rule 43 (expr)


state 70

   44 expr_assignment: expr_conditional .
   45                | expr_conditional . OP_ASSIGN expr_assignment
   46                | expr_conditional . OP_PLUS_SH expr_assignment
   47                | expr_conditional . OP_MINUS_SH expr_assignment
   48                | expr_conditional . OP_MULT_SH expr_assignment
   49                | expr_conditional . OP_DIV_SH expr_assignment
   50                | expr_conditional . OP_MOD_SH expr_assignment

    OP_ASSIGN    shift, and go to state 110
    OP_PLUS_SH   shift, and go to state 111
    OP_MINUS_SH  shift, and go to state 112
    OP_MULT_SH   shift, and go to state 113
    OP_DIV_SH    shift, and go to state 114
    OP_MOD_SH    shift, and go to state 115

    $default  reduce using rule 44 (expr_assignment)


state 71

   51 expr_conditional: expr_boolean .
   52                 | expr_boolean . COND_QUES expr_conditional COND_COLN expr_conditional

    COND_QUES  shift, and go to state 116

    $default  reduce using rule 51 (expr_conditional)


state 72

   53 expr_boolean: expr_implies .
   55 expr_implies: expr_implies . OP_IMPLIES expr_or

    OP_IMPLIES  shift, and go to state 117

    $default  reduce using rule 53 (expr_boolean)


state 73

   54 expr_implies: expr_or .
   57 expr_or: expr_or . OP_OR expr_and

    OP_OR  shift, and go to state 118

    $default  reduce using rule 54 (expr_implies)


state 74

   56 expr_or: expr_and .
   59 expr_and: expr_and . OP_AND expr_equality

    OP_AND  shift, and go to state 119

    $default  reduce using rule 56 (expr_or)


state 75

   58 expr_and: expr_equality .
   61 expr_equality: expr_equality . OP_EQ expr_order
   62              | expr_equality . OP_NE expr_order

    OP_EQ  shift, and go to state 120
    OP_NE  shift, and go to state 121

    $default  reduce using rule 58 (expr_and)


state 76

   60 expr_equality: expr_order .
   64 expr_order: expr_order . OP_GE expr_additive
   65           | expr_order . OP_LE expr_additive
   66           | expr_order . OP_GT expr_additive
   67           | expr_order . OP_LT expr_additive

    OP_GE  shift, and go to state 122
    OP_LE  shift, and go to state 123
    OP_GT  shift, and go to state 124
    OP_LT  shift, and go to state 125

    $default  reduce using rule 60 (expr_equality)


state 77

   63 expr_order: expr_additive .
   69 expr_additive: expr_additive . OP_PLUS expr_multiplicative
   70              | expr_additive . OP_MINUS expr_multiplicative

    OP_PLUS   shift, and go to state 126
    OP_MINUS  shift, and go to state 127

    $default  reduce using rule 63 (expr_order)


state 78

   68 expr_additive: expr_multiplicative .
   72 expr_multiplicative: expr_multiplicative . OP_MULTIPLICATION expr_object_creation
   73                    | expr_multiplicative . OP_DIVITION expr_object_creation
   74                    | expr_multiplicative . OP_MODULO expr_object_creation

    OP_MULTIPLICATION  shift, and go to state 128
    OP_DIVITION        shift, and go to state 129
    OP_MODULO          shift, and go to state 130

    $default  reduce using rule 68 (expr_additive)


state 79

   71 expr_multiplicative: expr_object_creation .

    $default  reduce using rule 71 (expr_multiplicative)


state 80

   75 expr_object_creation: expr_pre_additive_sign_and_not .

    $default  reduce using rule 75 (expr_object_creation)


state 81

   80 expr_pre_additive_sign_and_not: expr_post_additive_or_access .
   89 expr_post_additive_or_access: expr_post_additive_or_access . method_call
   90                             | expr_post_additive_or_access . property_access

    OP_PROP  shift, and go to state 131

    $default  reduce using rule 80 (expr_pre_additive_sign_and_not)

    property_access  go to state 132
    method_call      go to state 133


state 82

   86 expr_post_additive_or_access: expr_basic .
   87                             | expr_basic . OP_PLUS_PLUS
   88                             | expr_basic . OP_MINUS_MINUS

    OP_PLUS_PLUS    shift, and go to state 134
    OP_MINUS_MINUS  shift, and go to state 135

    $default  reduce using rule 86 (expr_post_additive_or_access)


state 83

   93 expr_basic: built_in .

    $default  reduce using rule 93 (expr_basic)


state 84

   34 instr_declaration: type . IDENTIFIER
   35                  | type . IDENTIFIER OP_ASSIGN expr

    IDENTIFIER  shift, and go to state 136


state 85

  110 type: IDENTIFIER .
  111     | IDENTIFIER . brackets

    LBRA  shift, and go to state 34

    $default  reduce using rule 110 (type)

    brackets  go to state 35


state 86

   19 class_constructor: IDENTIFIER LPAR parameters_def . RPAR LCUR instr_set RCUR

    RPAR  shift, and go to state 137


state 87

  102 parameters_def: parameters_def_2 .
  104 parameters_def_2: parameters_def_2 . COMA parameter_def

    COMA  shift, and go to state 138

    $default  reduce using rule 102 (parameters_def)


state 88

  103 parameters_def_2: parameter_def .

    $default  reduce using rule 103 (parameters_def_2)


state 89

  105 parameter_def: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 139


state 90

  112 brackets: LBRA RBRA .

    $default  reduce using rule 112 (brackets)


state 91

  113 brackets: brackets LBRA . RBRA

    RBRA  shift, and go to state 140


state 92

   11 class: CLASS IDENTIFIER LCUR class_instance_properties class_constructors class_instance_methods RCUR .

    $default  reduce using rule 11 (class)


state 93

   22 class_instance_method: METHOD type . IDENTIFIER LPAR parameters_def RPAR LCUR instr_set RCUR

    IDENTIFIER  shift, and go to state 141


state 94

   16 class_instance_property: type IDENTIFIER OP_ASSIGN . expr SEMC

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 142
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 95

   15 class_instance_property: type IDENTIFIER SEMC .

    $default  reduce using rule 15 (class_instance_property)


state 96

   78 array_size: LBRA . expr RBRA
  112 brackets: LBRA . RBRA

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RBRA            shift, and go to state 90

    expr                            go to state 143
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 97

   79 array_size: array_size . LBRA expr RBRA
   96 expr_basic: IDENTIFIER array_size .

    LBRA  shift, and go to state 144

    $default  reduce using rule 96 (expr_basic)


state 98

   37 block_if: IF LPAR . expr_boolean RPAR LCUR instr_set RCUR block_else

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_boolean                    go to state 145
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 99

   41 block_while: WHILE LPAR . expr_boolean RPAR LCUR instr_set RCUR
   42            | WHILE LPAR . expr_boolean RPAR instr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_boolean                    go to state 146
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 100

   76 expr_object_creation: NEW IDENTIFIER . LPAR parameters RPAR
   77                     | NEW IDENTIFIER . array_size

    LPAR  shift, and go to state 147
    LBRA  shift, and go to state 148

    array_size  go to state 149


state 101

   94 expr_basic: IDENTIFIER .
   96           | IDENTIFIER . array_size

    LBRA  shift, and go to state 148

    $default  reduce using rule 94 (expr_basic)

    array_size  go to state 97


state 102

   36 instr_return: RETURN expr .

    $default  reduce using rule 36 (instr_return)


state 103

   83 expr_pre_additive_sign_and_not: OP_PLUS expr_post_additive_or_access .
   89 expr_post_additive_or_access: expr_post_additive_or_access . method_call
   90                             | expr_post_additive_or_access . property_access

    OP_PROP  shift, and go to state 131

    $default  reduce using rule 83 (expr_pre_additive_sign_and_not)

    property_access  go to state 132
    method_call      go to state 133


state 104

   84 expr_pre_additive_sign_and_not: OP_MINUS expr_post_additive_or_access .
   89 expr_post_additive_or_access: expr_post_additive_or_access . method_call
   90                             | expr_post_additive_or_access . property_access

    OP_PROP  shift, and go to state 131

    $default  reduce using rule 84 (expr_pre_additive_sign_and_not)

    property_access  go to state 132
    method_call      go to state 133


state 105

   81 expr_pre_additive_sign_and_not: OP_PLUS_PLUS expr_post_additive_or_access .
   89 expr_post_additive_or_access: expr_post_additive_or_access . method_call
   90                             | expr_post_additive_or_access . property_access

    OP_PROP  shift, and go to state 131

    $default  reduce using rule 81 (expr_pre_additive_sign_and_not)

    property_access  go to state 132
    method_call      go to state 133


state 106

   82 expr_pre_additive_sign_and_not: OP_MINUS_MINUS expr_post_additive_or_access .
   89 expr_post_additive_or_access: expr_post_additive_or_access . method_call
   90                             | expr_post_additive_or_access . property_access

    OP_PROP  shift, and go to state 131

    $default  reduce using rule 82 (expr_pre_additive_sign_and_not)

    property_access  go to state 132
    method_call      go to state 133


state 107

   85 expr_pre_additive_sign_and_not: OP_NOT expr_post_additive_or_access .
   89 expr_post_additive_or_access: expr_post_additive_or_access . method_call
   90                             | expr_post_additive_or_access . property_access

    OP_PROP  shift, and go to state 131

    $default  reduce using rule 85 (expr_pre_additive_sign_and_not)

    property_access  go to state 132
    method_call      go to state 133


state 108

   95 expr_basic: LPAR expr . RPAR

    RPAR  shift, and go to state 150


state 109

   26 instr: instr_simple SEMC .

    $default  reduce using rule 26 (instr)


state 110

   45 expr_assignment: expr_conditional OP_ASSIGN . expr_assignment

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_assignment                 go to state 151
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 111

   46 expr_assignment: expr_conditional OP_PLUS_SH . expr_assignment

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_assignment                 go to state 152
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 112

   47 expr_assignment: expr_conditional OP_MINUS_SH . expr_assignment

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_assignment                 go to state 153
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 113

   48 expr_assignment: expr_conditional OP_MULT_SH . expr_assignment

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_assignment                 go to state 154
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 114

   49 expr_assignment: expr_conditional OP_DIV_SH . expr_assignment

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_assignment                 go to state 155
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 115

   50 expr_assignment: expr_conditional OP_MOD_SH . expr_assignment

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_assignment                 go to state 156
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 116

   52 expr_conditional: expr_boolean COND_QUES . expr_conditional COND_COLN expr_conditional

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_conditional                go to state 157
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 117

   55 expr_implies: expr_implies OP_IMPLIES . expr_or

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_or                         go to state 158
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 118

   57 expr_or: expr_or OP_OR . expr_and

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_and                        go to state 159
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 119

   59 expr_and: expr_and OP_AND . expr_equality

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_equality                   go to state 160
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 120

   61 expr_equality: expr_equality OP_EQ . expr_order

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_order                      go to state 161
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 121

   62 expr_equality: expr_equality OP_NE . expr_order

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_order                      go to state 162
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 122

   64 expr_order: expr_order OP_GE . expr_additive

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_additive                   go to state 163
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 123

   65 expr_order: expr_order OP_LE . expr_additive

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_additive                   go to state 164
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 124

   66 expr_order: expr_order OP_GT . expr_additive

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_additive                   go to state 165
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 125

   67 expr_order: expr_order OP_LT . expr_additive

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_additive                   go to state 166
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 126

   69 expr_additive: expr_additive OP_PLUS . expr_multiplicative

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_multiplicative             go to state 167
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 127

   70 expr_additive: expr_additive OP_MINUS . expr_multiplicative

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_multiplicative             go to state 168
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 128

   72 expr_multiplicative: expr_multiplicative OP_MULTIPLICATION . expr_object_creation

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_object_creation            go to state 169
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 129

   73 expr_multiplicative: expr_multiplicative OP_DIVITION . expr_object_creation

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_object_creation            go to state 170
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 130

   74 expr_multiplicative: expr_multiplicative OP_MODULO . expr_object_creation

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_object_creation            go to state 171
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 131

   91 property_access: OP_PROP . IDENTIFIER
   92 method_call: OP_PROP . IDENTIFIER LPAR parameters RPAR

    IDENTIFIER  shift, and go to state 172


state 132

   90 expr_post_additive_or_access: expr_post_additive_or_access property_access .

    $default  reduce using rule 90 (expr_post_additive_or_access)


state 133

   89 expr_post_additive_or_access: expr_post_additive_or_access method_call .

    $default  reduce using rule 89 (expr_post_additive_or_access)


state 134

   87 expr_post_additive_or_access: expr_basic OP_PLUS_PLUS .

    $default  reduce using rule 87 (expr_post_additive_or_access)


state 135

   88 expr_post_additive_or_access: expr_basic OP_MINUS_MINUS .

    $default  reduce using rule 88 (expr_post_additive_or_access)


state 136

   34 instr_declaration: type IDENTIFIER .
   35                  | type IDENTIFIER . OP_ASSIGN expr

    OP_ASSIGN  shift, and go to state 173

    $default  reduce using rule 34 (instr_declaration)


state 137

   19 class_constructor: IDENTIFIER LPAR parameters_def RPAR . LCUR instr_set RCUR

    LCUR  shift, and go to state 174


state 138

  104 parameters_def_2: parameters_def_2 COMA . parameter_def

    IDENTIFIER  shift, and go to state 85

    parameter_def  go to state 175
    type           go to state 89


state 139

  105 parameter_def: type IDENTIFIER .

    $default  reduce using rule 105 (parameter_def)


state 140

  113 brackets: brackets LBRA RBRA .

    $default  reduce using rule 113 (brackets)


state 141

   22 class_instance_method: METHOD type IDENTIFIER . LPAR parameters_def RPAR LCUR instr_set RCUR

    LPAR  shift, and go to state 176


state 142

   16 class_instance_property: type IDENTIFIER OP_ASSIGN expr . SEMC

    SEMC  shift, and go to state 177


state 143

   78 array_size: LBRA expr . RBRA

    RBRA  shift, and go to state 178


state 144

   79 array_size: array_size LBRA . expr RBRA

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 179
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 145

   37 block_if: IF LPAR expr_boolean . RPAR LCUR instr_set RCUR block_else

    RPAR  shift, and go to state 180


state 146

   41 block_while: WHILE LPAR expr_boolean . RPAR LCUR instr_set RCUR
   42            | WHILE LPAR expr_boolean . RPAR instr

    RPAR  shift, and go to state 181


state 147

   76 expr_object_creation: NEW IDENTIFIER LPAR . parameters RPAR

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    $default  reduce using rule 106 (parameters)

    expr                            go to state 182
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    parameters                      go to state 183
    parameter                       go to state 184


state 148

   78 array_size: LBRA . expr RBRA

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 143
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 149

   77 expr_object_creation: NEW IDENTIFIER array_size .
   79 array_size: array_size . LBRA expr RBRA

    LBRA  shift, and go to state 144

    $default  reduce using rule 77 (expr_object_creation)


state 150

   95 expr_basic: LPAR expr RPAR .

    $default  reduce using rule 95 (expr_basic)


state 151

   45 expr_assignment: expr_conditional OP_ASSIGN expr_assignment .

    $default  reduce using rule 45 (expr_assignment)


state 152

   46 expr_assignment: expr_conditional OP_PLUS_SH expr_assignment .

    $default  reduce using rule 46 (expr_assignment)


state 153

   47 expr_assignment: expr_conditional OP_MINUS_SH expr_assignment .

    $default  reduce using rule 47 (expr_assignment)


state 154

   48 expr_assignment: expr_conditional OP_MULT_SH expr_assignment .

    $default  reduce using rule 48 (expr_assignment)


state 155

   49 expr_assignment: expr_conditional OP_DIV_SH expr_assignment .

    $default  reduce using rule 49 (expr_assignment)


state 156

   50 expr_assignment: expr_conditional OP_MOD_SH expr_assignment .

    $default  reduce using rule 50 (expr_assignment)


state 157

   52 expr_conditional: expr_boolean COND_QUES expr_conditional . COND_COLN expr_conditional

    COND_COLN  shift, and go to state 185


state 158

   55 expr_implies: expr_implies OP_IMPLIES expr_or .
   57 expr_or: expr_or . OP_OR expr_and

    OP_OR  shift, and go to state 118

    $default  reduce using rule 55 (expr_implies)


state 159

   57 expr_or: expr_or OP_OR expr_and .
   59 expr_and: expr_and . OP_AND expr_equality

    OP_AND  shift, and go to state 119

    $default  reduce using rule 57 (expr_or)


state 160

   59 expr_and: expr_and OP_AND expr_equality .
   61 expr_equality: expr_equality . OP_EQ expr_order
   62              | expr_equality . OP_NE expr_order

    OP_EQ  shift, and go to state 120
    OP_NE  shift, and go to state 121

    $default  reduce using rule 59 (expr_and)


state 161

   61 expr_equality: expr_equality OP_EQ expr_order .
   64 expr_order: expr_order . OP_GE expr_additive
   65           | expr_order . OP_LE expr_additive
   66           | expr_order . OP_GT expr_additive
   67           | expr_order . OP_LT expr_additive

    OP_GE  shift, and go to state 122
    OP_LE  shift, and go to state 123
    OP_GT  shift, and go to state 124
    OP_LT  shift, and go to state 125

    $default  reduce using rule 61 (expr_equality)


state 162

   62 expr_equality: expr_equality OP_NE expr_order .
   64 expr_order: expr_order . OP_GE expr_additive
   65           | expr_order . OP_LE expr_additive
   66           | expr_order . OP_GT expr_additive
   67           | expr_order . OP_LT expr_additive

    OP_GE  shift, and go to state 122
    OP_LE  shift, and go to state 123
    OP_GT  shift, and go to state 124
    OP_LT  shift, and go to state 125

    $default  reduce using rule 62 (expr_equality)


state 163

   64 expr_order: expr_order OP_GE expr_additive .
   69 expr_additive: expr_additive . OP_PLUS expr_multiplicative
   70              | expr_additive . OP_MINUS expr_multiplicative

    OP_PLUS   shift, and go to state 126
    OP_MINUS  shift, and go to state 127

    $default  reduce using rule 64 (expr_order)


state 164

   65 expr_order: expr_order OP_LE expr_additive .
   69 expr_additive: expr_additive . OP_PLUS expr_multiplicative
   70              | expr_additive . OP_MINUS expr_multiplicative

    OP_PLUS   shift, and go to state 126
    OP_MINUS  shift, and go to state 127

    $default  reduce using rule 65 (expr_order)


state 165

   66 expr_order: expr_order OP_GT expr_additive .
   69 expr_additive: expr_additive . OP_PLUS expr_multiplicative
   70              | expr_additive . OP_MINUS expr_multiplicative

    OP_PLUS   shift, and go to state 126
    OP_MINUS  shift, and go to state 127

    $default  reduce using rule 66 (expr_order)


state 166

   67 expr_order: expr_order OP_LT expr_additive .
   69 expr_additive: expr_additive . OP_PLUS expr_multiplicative
   70              | expr_additive . OP_MINUS expr_multiplicative

    OP_PLUS   shift, and go to state 126
    OP_MINUS  shift, and go to state 127

    $default  reduce using rule 67 (expr_order)


state 167

   69 expr_additive: expr_additive OP_PLUS expr_multiplicative .
   72 expr_multiplicative: expr_multiplicative . OP_MULTIPLICATION expr_object_creation
   73                    | expr_multiplicative . OP_DIVITION expr_object_creation
   74                    | expr_multiplicative . OP_MODULO expr_object_creation

    OP_MULTIPLICATION  shift, and go to state 128
    OP_DIVITION        shift, and go to state 129
    OP_MODULO          shift, and go to state 130

    $default  reduce using rule 69 (expr_additive)


state 168

   70 expr_additive: expr_additive OP_MINUS expr_multiplicative .
   72 expr_multiplicative: expr_multiplicative . OP_MULTIPLICATION expr_object_creation
   73                    | expr_multiplicative . OP_DIVITION expr_object_creation
   74                    | expr_multiplicative . OP_MODULO expr_object_creation

    OP_MULTIPLICATION  shift, and go to state 128
    OP_DIVITION        shift, and go to state 129
    OP_MODULO          shift, and go to state 130

    $default  reduce using rule 70 (expr_additive)


state 169

   72 expr_multiplicative: expr_multiplicative OP_MULTIPLICATION expr_object_creation .

    $default  reduce using rule 72 (expr_multiplicative)


state 170

   73 expr_multiplicative: expr_multiplicative OP_DIVITION expr_object_creation .

    $default  reduce using rule 73 (expr_multiplicative)


state 171

   74 expr_multiplicative: expr_multiplicative OP_MODULO expr_object_creation .

    $default  reduce using rule 74 (expr_multiplicative)


state 172

   91 property_access: OP_PROP IDENTIFIER .
   92 method_call: OP_PROP IDENTIFIER . LPAR parameters RPAR

    LPAR  shift, and go to state 186

    $default  reduce using rule 91 (property_access)


state 173

   35 instr_declaration: type IDENTIFIER OP_ASSIGN . expr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 187
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 174

   19 class_constructor: IDENTIFIER LPAR parameters_def RPAR LCUR . instr_set RCUR

    $default  reduce using rule 24 (instr_set)

    instr_set  go to state 188


state 175

  104 parameters_def_2: parameters_def_2 COMA parameter_def .

    $default  reduce using rule 104 (parameters_def_2)


state 176

   22 class_instance_method: METHOD type IDENTIFIER LPAR . parameters_def RPAR LCUR instr_set RCUR

    IDENTIFIER  shift, and go to state 85

    $default  reduce using rule 101 (parameters_def)

    parameters_def    go to state 189
    parameters_def_2  go to state 87
    parameter_def     go to state 88
    type              go to state 89


state 177

   16 class_instance_property: type IDENTIFIER OP_ASSIGN expr SEMC .

    $default  reduce using rule 16 (class_instance_property)


state 178

   78 array_size: LBRA expr RBRA .

    $default  reduce using rule 78 (array_size)


state 179

   79 array_size: array_size LBRA expr . RBRA

    RBRA  shift, and go to state 190


state 180

   37 block_if: IF LPAR expr_boolean RPAR . LCUR instr_set RCUR block_else

    LCUR  shift, and go to state 191


state 181

   41 block_while: WHILE LPAR expr_boolean RPAR . LCUR instr_set RCUR
   42            | WHILE LPAR expr_boolean RPAR . instr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    LCUR            shift, and go to state 192
    SEMC            shift, and go to state 59

    instr                           go to state 193
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 182

  109 parameter: expr .

    $default  reduce using rule 109 (parameter)


state 183

   76 expr_object_creation: NEW IDENTIFIER LPAR parameters . RPAR
  108 parameters: parameters . COMA parameter

    RPAR  shift, and go to state 194
    COMA  shift, and go to state 195


state 184

  107 parameters: parameter .

    $default  reduce using rule 107 (parameters)


state 185

   52 expr_conditional: expr_boolean COND_QUES expr_conditional COND_COLN . expr_conditional

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr_conditional                go to state 196
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83


state 186

   92 method_call: OP_PROP IDENTIFIER LPAR . parameters RPAR

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    $default  reduce using rule 106 (parameters)

    expr                            go to state 182
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    parameters                      go to state 197
    parameter                       go to state 184


state 187

   35 instr_declaration: type IDENTIFIER OP_ASSIGN expr .

    $default  reduce using rule 35 (instr_declaration)


state 188

   19 class_constructor: IDENTIFIER LPAR parameters_def RPAR LCUR instr_set . RCUR
   23 instr_set: instr_set . instr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RCUR            shift, and go to state 198
    SEMC            shift, and go to state 59

    instr                           go to state 60
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 189

   22 class_instance_method: METHOD type IDENTIFIER LPAR parameters_def . RPAR LCUR instr_set RCUR

    RPAR  shift, and go to state 199


state 190

   79 array_size: array_size LBRA expr RBRA .

    $default  reduce using rule 79 (array_size)


state 191

   37 block_if: IF LPAR expr_boolean RPAR LCUR . instr_set RCUR block_else

    $default  reduce using rule 24 (instr_set)

    instr_set  go to state 200


state 192

   41 block_while: WHILE LPAR expr_boolean RPAR LCUR . instr_set RCUR

    $default  reduce using rule 24 (instr_set)

    instr_set  go to state 201


state 193

   42 block_while: WHILE LPAR expr_boolean RPAR instr .

    $default  reduce using rule 42 (block_while)


state 194

   76 expr_object_creation: NEW IDENTIFIER LPAR parameters RPAR .

    $default  reduce using rule 76 (expr_object_creation)


state 195

  108 parameters: parameters COMA . parameter

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 101
    NEW             shift, and go to state 50
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57

    expr                            go to state 182
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    parameter                       go to state 202


state 196

   52 expr_conditional: expr_boolean COND_QUES expr_conditional COND_COLN expr_conditional .

    $default  reduce using rule 52 (expr_conditional)


state 197

   92 method_call: OP_PROP IDENTIFIER LPAR parameters . RPAR
  108 parameters: parameters . COMA parameter

    RPAR  shift, and go to state 203
    COMA  shift, and go to state 195


state 198

   19 class_constructor: IDENTIFIER LPAR parameters_def RPAR LCUR instr_set RCUR .

    $default  reduce using rule 19 (class_constructor)


state 199

   22 class_instance_method: METHOD type IDENTIFIER LPAR parameters_def RPAR . LCUR instr_set RCUR

    LCUR  shift, and go to state 204


state 200

   23 instr_set: instr_set . instr
   37 block_if: IF LPAR expr_boolean RPAR LCUR instr_set . RCUR block_else

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RCUR            shift, and go to state 205
    SEMC            shift, and go to state 59

    instr                           go to state 60
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 201

   23 instr_set: instr_set . instr
   41 block_while: WHILE LPAR expr_boolean RPAR LCUR instr_set . RCUR

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RCUR            shift, and go to state 206
    SEMC            shift, and go to state 59

    instr                           go to state 60
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 202

  108 parameters: parameters COMA parameter .

    $default  reduce using rule 108 (parameters)


state 203

   92 method_call: OP_PROP IDENTIFIER LPAR parameters RPAR .

    $default  reduce using rule 92 (method_call)


state 204

   22 class_instance_method: METHOD type IDENTIFIER LPAR parameters_def RPAR LCUR . instr_set RCUR

    $default  reduce using rule 24 (instr_set)

    instr_set  go to state 207


state 205

   37 block_if: IF LPAR expr_boolean RPAR LCUR instr_set RCUR . block_else

    ELSE  shift, and go to state 208

    $default  reduce using rule 40 (block_else)

    block_else  go to state 209


state 206

   41 block_while: WHILE LPAR expr_boolean RPAR LCUR instr_set RCUR .

    $default  reduce using rule 41 (block_while)


state 207

   22 class_instance_method: METHOD type IDENTIFIER LPAR parameters_def RPAR LCUR instr_set . RCUR
   23 instr_set: instr_set . instr

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RCUR            shift, and go to state 210
    SEMC            shift, and go to state 59

    instr                           go to state 60
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 208

   38 block_else: ELSE . LCUR instr_set RCUR
   39           | ELSE . block_if

    IF    shift, and go to state 48
    LCUR  shift, and go to state 211

    block_if  go to state 212


state 209

   37 block_if: IF LPAR expr_boolean RPAR LCUR instr_set RCUR block_else .

    $default  reduce using rule 37 (block_if)


state 210

   22 class_instance_method: METHOD type IDENTIFIER LPAR parameters_def RPAR LCUR instr_set RCUR .

    $default  reduce using rule 22 (class_instance_method)


state 211

   38 block_else: ELSE LCUR . instr_set RCUR

    $default  reduce using rule 24 (instr_set)

    instr_set  go to state 213


state 212

   39 block_else: ELSE block_if .

    $default  reduce using rule 39 (block_else)


state 213

   23 instr_set: instr_set . instr
   38 block_else: ELSE LCUR instr_set . RCUR

    INT             shift, and go to state 43
    BOOLEAN         shift, and go to state 44
    CHAR            shift, and go to state 45
    STRING          shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    IF              shift, and go to state 48
    WHILE           shift, and go to state 49
    NEW             shift, and go to state 50
    RETURN          shift, and go to state 51
    OP_PLUS         shift, and go to state 52
    OP_MINUS        shift, and go to state 53
    OP_PLUS_PLUS    shift, and go to state 54
    OP_MINUS_MINUS  shift, and go to state 55
    OP_NOT          shift, and go to state 56
    LPAR            shift, and go to state 57
    RCUR            shift, and go to state 214
    SEMC            shift, and go to state 59

    instr                           go to state 60
    instr_simple                    go to state 61
    instr_conditional               go to state 62
    instr_loop                      go to state 63
    instr_declaration               go to state 64
    instr_return                    go to state 65
    block_if                        go to state 66
    block_while                     go to state 67
    expr                            go to state 68
    expr_assignment                 go to state 69
    expr_conditional                go to state 70
    expr_boolean                    go to state 71
    expr_implies                    go to state 72
    expr_or                         go to state 73
    expr_and                        go to state 74
    expr_equality                   go to state 75
    expr_order                      go to state 76
    expr_additive                   go to state 77
    expr_multiplicative             go to state 78
    expr_object_creation            go to state 79
    expr_pre_additive_sign_and_not  go to state 80
    expr_post_additive_or_access    go to state 81
    expr_basic                      go to state 82
    built_in                        go to state 83
    type                            go to state 84


state 214

   38 block_else: ELSE LCUR instr_set RCUR .

    $default  reduce using rule 38 (block_else)
